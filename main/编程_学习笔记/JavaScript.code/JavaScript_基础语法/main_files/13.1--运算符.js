/* 
    递增递减运算符  ++  --
        与 C语言 相同

    非运算符  !
        与 C语言相同    
        
    特殊：用两次 ! 可转化为 Boolean

    与非运算符  &&  ||

        bool值与 C语言 相同

        非 bool值,转化为 Bool值后

            &&若前一个为 true,则返回第一个值
            &&若前一个为 false,则返回第二个值

            ||若前一个为 true,则返回第一个值
            ||若第一个值为 false,则返回第二个值
*/

/* 
    +(正) 运算符 与  -(负) 运算符
        对于非 Number 的值,先转换为 Number,再运算

*/

/* 
    赋值运算符  +=  -=
        与 C语言 相同

*/

/* 
    关系运算符  >  >=  <  <=  ==
        
        Number的值与 C语言 相同    

        非 Number的值先转换为 Number
        如果两边都是 String 不会转换为数字,而是会比较字符的编码值
        比较中文时没有意义

        任何值与 NaN比较都是 false
*/

/* 
    相等运算符

    ==  进行相等运算
        - 如果类型不同,则会转换为相同的类型,再判断
            null与 undefined 相等
            NaN不和任何值相等(包括它本身)

    === 全等运算
            类型与数值都做比较

    ！==  不全等运算
            类型与数值都做比较
*/

/* 
    isNaN()函数： 检查变量是不是 NaN
*/

var a=3;
a=isNaN(a);
console.log(a);

var a=NaN;
a=isNaN(a);
console.log(a);